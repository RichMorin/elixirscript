{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA,SAAS,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAC;AAC7D,MAAI,QAAQ,oGAEE,KAAK,4BACN,WAAW,wNAOR,WAAW,mOAQX,OAAO,qHAMb,CAAC;;AAEP,SAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACvB,SAAO,QAAQ,CAAC;CACpB;;AAED,SAAS,IAAI,GAAE;AACb,MAAI,SAAS,GAAG,QAAQ,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,MAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,MAAI,QAAQ,GAAG,YAAY,CACzB,YAAY,EACZ,mFAAmF,6KAiBpF,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,qBAAqB,EACrB,gEAAgE,sFASjE,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,cAAc,EACd,2FAA2F,oKAa5F,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,WAAW,EACX,uCAAuC,uFAQxC,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,qBAAqB,EACrB,uDAAuD,4SAgBxD,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,SAAS,EACT,wCAAwC,iaAyBzC,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,qBAAqB,EACrB,gEAAgE,6DAOjE,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAGzB,UAAQ,GAAG,YAAY,CACrB,eAAe,EACf,oDAAoD,sKAerD,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,UAAQ,GAAG,YAAY,CACrB,gBAAgB,EAChB,EAAE,kKAWH,CAAC;AACF,WAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEzB,MAAI,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1C,WAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG,gBAAgB,CAAC;AAC7D,MAAI,CAAC,gBAAgB,EAAE,CAAC;CACzB","file":"app.js","sourcesContent":["function fillTemplate(title, description, elixir_code, js_code){\n  let template = `<div class=\"translation\">\n        <div class=\"translation-description\">\n          <h4>${title}</h4>\n          <p>${description}</p>\n        </div>\n        <div class=\"row translation-code\">\n          <div class=\"col-md-6\">\n            <h5>Elixir</h5> \n            <pre>\n              <code class=\"elixir\">\n                ${elixir_code}\n              </code>\n            </pre>        \n          </div>\n          <div class=\"col-md-6\">\n            <h5>JavaScript</h5> \n            <pre>\n              <code class=\"javascript\">\n                ${js_code}\n              </code>\n            </pre>        \n          </div>\n        </div>\n      </div>\n      <hr/>`;\n\n      console.log(template);\n     return template;\n}\n\nfunction main(){\n  let container = document.getElementsByClassName('container')[0];\n  let templates = [];\n\n  let template = fillTemplate(\n    \"primatives\", \n    \"Here is how primatives are translated. String interpolation is not supported yet.\", \n    `\n    nil\n    1\n    -1.0\n    \"Hello\"\n    :atom\n    [1,2,3]\n    {1,2,3}`,\n    `\n    null\n    1\n    -1.0\n    'Hello'\n    Symbol('atom')\n    [1,2,3]\n    [1,2,3]`\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"Assignment Patterns\", \n    \"Assignment patterns are translated into assignment statements.\", \n    `\n    a = 1\n    {a,b} = {1,2}\n    `,\n    `\n    let a = 1;\n    [a,b] = [1,2]\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"def and defp\", \n    \"defs are translated to exported functions, defps are translated to non-exported functions\", \n    `\n    def something() do\n    end\n\n    defp something_else() do\n    end\n    `,\n    `\n    export function something(){}\n\n    function something_else();\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"defmodule\", \n    \"defmodules are treated as es6 modules\", \n    `\n    defmodule Hello do\n    end\n    `,\n    `\n    //no visible representation\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"imports and aliases\", \n    \"imports and aliases are turned into import statements\", \n    `\n    defmodule Hello do\n      import World\n      import US, only: [la: 1]\n      alias Super.Man\n      alias Super.Man as Kent\n\n    end\n    `,\n    `\n    import * as World from 'world'\n    import la from 'us'\n    import * as Man from 'super/man'\n    import * as Kent from 'super/man'\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"structs\", \n    \"Structs are tranlated into ES6 classes\", \n    `\n    defmodule User do\n      defstruct name: \"john\", age: 27\n    end\n\n    defmodule User do\n      defstruct :name, :age\n    end\n    `,\n    `\n    export class User{\n      contructor(name = 'john', age = 27){\n        this.name = name;\n        this.age = age;\n      }\n    }\n\n    export class User{\n      contructor(name, age){\n        this.name = name;\n        this.age = age;\n      }\n    }\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"anonymous functions\", \n    \"Anonymous functions are translated into JS anonymous functions\", \n    `\n    fn(x) -> x * 2 end\n    `,\n    `\n    x => x * 2\n    `\n  );\n  templates.push(template);\n\n\n  template = fillTemplate(\n    \"if statements\", \n    \"if statements are translated into JS if statements\", \n    `\n      if 1 == 1 do\n        a = 1\n      else\n        a = 2\n      end\n    `,\n    `\n    if(1 == 1){\n      let a = 1;\n    }else{\n      let a = 2;\n    }\n    `\n  );\n  templates.push(template);\n\n  template = fillTemplate(\n    \"function calls\", \n    \"\", \n    `\n    something()\n    something_else(1, 2)\n    SomeModule.execute()\n    `,\n    `\n    something();\n    something_else(1, 2);\n    SomeModule.execute();\n    `\n  );\n  templates.push(template);\n\n  let templates_string = templates.join(\"\");\n  container.innerHTML = container.innerHTML + templates_string;\n  hljs.initHighlighting();\n}"],"sourceRoot":"/source/"}